@inject NavigationManager NavigationManager
@rendermode InteractiveServer
<header>
 
    <nav class="@ClassCss sidebar">
        <a class="close" @onclick="HideSidebar"><svg xmlns="http://www.w3.org/2000/svg" height="26" viewBox="0 -960 960 960" width="26"><path d="m251.333-204.667-46.666-46.666L433.334-480 204.667-708.667l46.666-46.666L480-526.666l228.667-228.667 46.666 46.666L526.666-480l228.667 228.667-46.666 46.666L480-433.334 251.333-204.667Z" /></svg></a>
        <a href="@("/")">Home</a>
        <a href="@("/about")">About</a>
        <a href="@("/contact")">Contact</a>
        <a href="@("/hireme")">Hire Me</a>
        <a href="@("/projects")">Projects</a>
        <a href="@("/Account/Login")">Login</a>
        <a href="@("/Account/Register")">Sign Up</a>
    </nav>
  
<SfAppBar Mode="AppBarMode.Dense" CssClass="applbar">
    
    <div class="first-part appnav">
        <a href="@("/")" class="home navbutton">Home</a>
        <a href="@("/about")" class="navbutton">About</a>
        <a href="@("/contact")" class="navbutton">Contact</a>
        <a href="@("/hireme")" class="navbutton">Hire Me</a>
        <a href="@("/projects")" class="navbutton">Projects</a>
    </div>

    <div class="second-part appnav">
            <a href="@("/Account/Login")">Login</a>
            <a href="@("/Account/Register")" class="ralign">Sign Up</a>
    </div>


        <a class="menu" @onclick="ShowSidebar"><svg xmlns="http://www.w3.org/2000/svg" height="26" viewBox="0 -960 960 960" width="26"><path d="M120-240v-80h720v80H120Zm0-200v-80h720v80H120Zm0-200v-80h720v80H120Z" /></svg></a>

        <SfButton Content="Hire Me" CssClass="outline ralign" @onclick="OnBtnClick"></SfButton>
    
</SfAppBar>


</header>
<section>
<AuthorizeView>
    <Authorized>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Account/Manage">
                <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <form action="Account/Logout" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <button type="submit" class="nav-link">
                    <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                </button>
            </form>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Account/Register">
                <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Account/Login">
                <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
            </NavLink>
        </div>
    </NotAuthorized>
</AuthorizeView>
</section>


@code {
    public string? ClassCss { get; set; }


    public void OnBtnClick()
    {

        NavigationManager.NavigateTo("/hireme");
    }

    protected void ShowSidebar()
    {
        ClassCss = "showsidebar";
    }

    protected void HideSidebar()
    {
        ClassCss = null;
    }

    //Logout configuration
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

